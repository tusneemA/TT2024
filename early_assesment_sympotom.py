# -*- coding: utf-8 -*-
"""Early_Assesment_Sympotom.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bbx9Aj8AuEdTlspM8uY9kCY93WuNU5LR
"""

gpip install transformers scikit-learn

from transformers import pipeline
from sklearn.model_selection import train_test_split

# This is a hypothetical and oversimplified dataset, for demonstration purposes only.
# A real dataset should be extensive, balanced, and medically accurate, often requiring thousands to millions of data points.
data = [
    ("I have a skin rash and it's very itchy", "dermatological"),
    ("I've been \;= a lot lately", "respiratory"),
    ("My head has been hurting for the past week", "neurological"),
    # ... (many more examples needed)
]

# Split the dataset into training and testing sets
train_texts, test_texts, train_labels, test_labels = train_test_split(
    [item[0] for item in data],
    [item[1] for item in data],
    test_size=.2
)

# Here, we're using a pre-trained model from Hugging Face; in a real application, you would train your model on a medical dataset.
classifier = pipeline('text-classification', model='distilbert-base-uncased')
def pre_diagnosis_chatbot():
    print("Hello! I'm a pre-diagnosis bot. You can describe your symptoms, and I'll try to identify the general area of concern.")
    print("Note: I'm a simple AI bot, not a doctor. Always consult with a healthcare professional for accurate medical advice.\n")

    while True:
        # Get user input
        user_input = input("Please describe your symptoms: ")

        # Use the model to make a prediction
        try:
            prediction = classifier(user_input)
            category = prediction[0]['label']
        except Exception as e:
            print(f"An error occurred: {e}")
            continue

        # Respond based on the prediction
        if category == 'LABEL_0':
            print("Your symptoms might be related to dermatological issues. Consider seeing a dermatologist.\n")
        elif category == 'LABEL_1':
            print("Your symptoms might be related to respiratory issues. Consider seeing a pulmonologist.\n")
        elif category == 'LABEL_2':print("Your symptoms might be related to neurological issues. Consider seeing a neurologist.\n")
        else:print("I'm not sure. It's important to consult with a healthcare professional for proper guidance.\n")

        # Check if the user wants to continue
        if input("Would you like to describe other symptoms? (yes/no) ").lower() != 'yes':
            print("Goodbye! Take care.")
            break

# Start the chatbot
pre_diagnosis_chatbot()